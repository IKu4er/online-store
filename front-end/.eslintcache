[{"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\index.js":"1","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\App.js":"2","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\store\\UserStore.js":"3","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\store\\DeviceStore.js":"4","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\http\\userAPI.js":"5","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\http\\index.js":"6","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\routes.js":"7","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\utils\\consts.js":"8","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\Auth.js":"9","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\Shop.js":"10","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\Admin.js":"11","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\Basket.js":"12","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\DevicePage.js":"13","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\http\\deviceAPI.js":"14","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\AppRouter.js":"15","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\NavBar.js":"16","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\DeviceList.js":"17","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\Pages.js":"18","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\BrandBar.js":"19","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\TypeBar.js":"20","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\modals\\CreateType.js":"21","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\modals\\CreateDevice.js":"22","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\modals\\CreateBrand.js":"23","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\DeviceItem.js":"24"},{"size":457,"mtime":1640419746019,"results":"25","hashOfConfig":"26"},{"size":908,"mtime":1640430812252,"results":"27","hashOfConfig":"26"},{"size":567,"mtime":1640432269090,"results":"28","hashOfConfig":"26"},{"size":1365,"mtime":1640424806599,"results":"29","hashOfConfig":"26"},{"size":725,"mtime":1640431873072,"results":"30","hashOfConfig":"26"},{"size":428,"mtime":1640419746018,"results":"31","hashOfConfig":"26"},{"size":810,"mtime":1640419746022,"results":"32","hashOfConfig":"26"},{"size":234,"mtime":1640419746024,"results":"33","hashOfConfig":"26"},{"size":3281,"mtime":1640432308204,"results":"34","hashOfConfig":"26"},{"size":1605,"mtime":1640425008391,"results":"35","hashOfConfig":"26"},{"size":1601,"mtime":1640420987578,"results":"36","hashOfConfig":"26"},{"size":157,"mtime":1640419746021,"results":"37","hashOfConfig":"26"},{"size":2282,"mtime":1640419746021,"results":"38","hashOfConfig":"26"},{"size":1034,"mtime":1640419746018,"results":"39","hashOfConfig":"26"},{"size":814,"mtime":1640432176877,"results":"40","hashOfConfig":"26"},{"size":2161,"mtime":1640431884866,"results":"41","hashOfConfig":"26"},{"size":510,"mtime":1640419746012,"results":"42","hashOfConfig":"26"},{"size":831,"mtime":1640419746013,"results":"43","hashOfConfig":"26"},{"size":798,"mtime":1640420679516,"results":"44","hashOfConfig":"26"},{"size":777,"mtime":1640419746013,"results":"45","hashOfConfig":"26"},{"size":1399,"mtime":1640419746015,"results":"46","hashOfConfig":"26"},{"size":6256,"mtime":1640419746015,"results":"47","hashOfConfig":"26"},{"size":1415,"mtime":1640419746014,"results":"48","hashOfConfig":"26"},{"size":1117,"mtime":1640419746011,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"14kxxv7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\index.js",[],["105","106"],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\App.js",["107"],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\store\\UserStore.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\store\\DeviceStore.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\http\\userAPI.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\http\\index.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\routes.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\utils\\consts.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\Auth.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\Shop.js",["108","109"],"import React, { useContext, useEffect } from 'react';\r\nimport { Container } from \"react-bootstrap\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport TypeBar from \"../commponents/TypeBar\"\r\nimport BrandBar from \"../commponents/BrandBar\";\r\nimport DeviceList from \"../commponents/DeviceList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\r\nimport Pages from \"../commponents/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    const { device } = useContext(Context)\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n        fetchDevices(null, null, 1, 2).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 4).then(data => {\r\n            device.setDevices(data.rows)\r\n            device.setTotalCount(data.count)\r\n        })\r\n    }, [device.page, device.selectedType, device.selectedBrand,])\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"mt-2\">\r\n                <Col md={3}>\r\n                    <TypeBar />\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar />\r\n                    <DeviceList />\r\n                    <Pages />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;\r\n","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\Admin.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\Basket.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\pages\\DevicePage.js",["110"],"import React, {useEffect, useState} from 'react';\r\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\r\nimport bigStar from '../assets/bigStar.png'\r\nimport {useParams} from 'react-router-dom'\r\nimport {fetchOneDevice} from \"../http/deviceAPI\";\r\n\r\nconst DevicePage = () => {\r\n    const [device, setDevice] = useState({info: []})\r\n    const {id} = useParams()\r\n    useEffect(() => {\r\n        fetchOneDevice(id).then(data => setDevice(data))\r\n    }, [])\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}/>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Row className=\"d-flex flex-column align-items-center\">\r\n                        <h2>{device.name}</h2>\r\n                        <div\r\n                            className=\"d-flex align-items-center justify-content-center\"\r\n                            style={{background: `url(${bigStar}) no-repeat center center`, width:240, height: 240, backgroundSize: 'cover', fontSize:64}}\r\n                        >\r\n                            {device.rating}\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card\r\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\r\n                    >\r\n                        <h3>От: {device.price} руб.</h3>\r\n                        <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <h1>Характеристики</h1>\r\n                {device.info.map((info, index) =>\r\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\r\n                        {info.title}: {info.description}\r\n                    </Row>\r\n                )}\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DevicePage;\r\n","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\http\\deviceAPI.js",["111"],"import {$authHost, $host} from \"./index\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const {data} = await $authHost.post('api/device', device)\r\n    return data\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\r\n    const {data} = await $host.get('api/device', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const {data} = await $host.get('api/device/' + id)\r\n    return data\r\n}\r\n","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\AppRouter.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\NavBar.js",["112"],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\DeviceList.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\Pages.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\BrandBar.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\TypeBar.js",["113"],"import React, {useContext} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\n\r\nconst TypeBar = observer(() => {\r\n    const {device} = useContext(Context)\r\n    return (\r\n        <ListGroup>\r\n            {device.types.map(type =>\r\n                <ListGroup.Item\r\n                    style={{cursor: 'pointer'}}\r\n                    active={type.id === device.selectedType.id}\r\n                    onClick={() => device.setSelectedType(type)}\r\n                    key={type.id}\r\n                >\r\n                    {type.name}\r\n                </ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});\r\n\r\nexport default TypeBar;\r\n","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\modals\\CreateType.js",[],"C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\modals\\CreateDevice.js",["114","115"],"import React, {useContext, useEffect, useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\nimport {Context} from \"../../index\";\r\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [file, setFile] = useState(null)\r\n    const [info, setInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then(data => device.setTypes(data))\r\n        fetchBrands().then(data => device.setBrands(data))\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\r\n    }\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number))\r\n    }\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const selectFile = e => {\r\n        setFile(e.target.files[0])\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData()\r\n        formData.append('name', name)\r\n        formData.append('price', `${price}`)\r\n        formData.append('img', file)\r\n        formData.append('brandId', device.selectedBrand.id)\r\n        formData.append('typeId', device.selectedType.id)\r\n        formData.append('info', JSON.stringify(info))\r\n        createDevice(formData).then(data => onHide())\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить устройство\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedType(type)}\r\n                                    key={type.id}\r\n                                >\r\n                                    {type.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => device.setSelectedBrand(brand)}\r\n                                    key={brand.id}\r\n                                >\r\n                                    {brand.name}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название устройства\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость устройства\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                    <Button\r\n                        variant={\"outline-dark\"}\r\n                        onClick={addInfo}\r\n                    >\r\n                        Добавить новое свойство\r\n                    </Button>\r\n                    {info.map(i =>\r\n                        <Row className=\"mt-4\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.title}\r\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\r\n                                    placeholder=\"Введите название свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control\r\n                                    value={i.description}\r\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\r\n                                    placeholder=\"Введите описание свойства\"\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button\r\n                                    onClick={() => removeInfo(i.number)}\r\n                                    variant={\"outline-danger\"}\r\n                                >\r\n                                    Удалить\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateDevice;\r\n","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\modals\\CreateBrand.js",["116"],"import React, {useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {createBrand, createType} from \"../../http/deviceAPI\";\r\n\r\nconst CreateBrand = ({show, onHide}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('')\r\n            onHide()\r\n        })\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить тип\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={value}\r\n                        onChange={e => setValue(e.target.value)}\r\n                        placeholder={\"Введите название типа\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBrand;\r\n","C:\\Users\\appro\\Desktop\\mainTest\\online-store\\front-end\\src\\commponents\\DeviceItem.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":19,"column":8,"nodeType":"123","endLine":19,"endColumn":10,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":23,"column":8,"nodeType":"123","endLine":23,"endColumn":10,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"125","line":30,"column":8,"nodeType":"123","endLine":30,"endColumn":65,"suggestions":"127"},{"ruleId":"121","severity":1,"message":"128","line":12,"column":8,"nodeType":"123","endLine":12,"endColumn":10,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":33,"column":57,"nodeType":"136","messageId":"137","endLine":33,"endColumn":59},{"ruleId":"130","severity":1,"message":"138","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":11},{"ruleId":"130","severity":1,"message":"139","line":5,"column":36,"nodeType":"132","messageId":"133","endLine":5,"endColumn":48},{"ruleId":"121","severity":1,"message":"125","line":18,"column":8,"nodeType":"123","endLine":18,"endColumn":10,"suggestions":"140"},{"ruleId":"130","severity":1,"message":"141","line":4,"column":22,"nodeType":"132","messageId":"133","endLine":4,"endColumn":32},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["144"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["145"],["146"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["147"],"no-unused-vars","'jwt_decode' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Col' is defined but never used.","'fetchDevices' is defined but never used.",["148"],"'createType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"151","fix":"157"},"Update the dependencies array to be: [user]",{"range":"158","text":"159"},"Update the dependencies array to be: [device]",{"range":"160","text":"161"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"162","text":"163"},"Update the dependencies array to be: [id]",{"range":"164","text":"165"},{"range":"166","text":"161"},[675,677],"[user]",[912,914],"[device]",[1151,1208],"[device.page, device.selectedType, device.selectedBrand, device]",[468,470],"[id]",[764,766]]